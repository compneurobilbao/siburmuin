<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="False" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="False" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="False" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="False" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="True" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="contrast_sensitivity_test" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import csv&amp;#10;&amp;#10;# Variables estaticas&amp;#10;starting_value = 0.1&amp;#10;step_size = 0.01&amp;#10;stop_reversals = 10&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;contrast = starting_value&amp;#10;step = step_size&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_contrasts = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="grating.contrast = contrast" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve el eestimulo&amp;#10;    response = False&amp;#10;&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve el estimulo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            contrast = max(0, contrast - step)  # Disminuir el contraste&amp;#10;            if last_direction == &quot;up&quot;:&amp;#10;                reversals += 1&amp;#10;                reversal_contrasts.append(contrast)&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else:  # Respuesta incorrecta: el paciente no ve el estimulo&amp;#10;        contrast += step  # Aumentar el contraste&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_contrasts.append(contrast)&amp;#10;        last_direction = &quot;up&quot;&amp;#10;    &amp;#10;    # Actualizar el contraste del estímulo&amp;#10;    grating.contrast = contrast&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'contrast': contrast,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;    &amp;#10;    # Regla para aumentar la granularidad del test&amp;#10;    if (reversals % 3 == 0) and reversals != 0:&amp;#10;        step = step/2&amp;#10;        print(f&quot;New step = {step}&quot;)&amp;#10;        &amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        # almaceno trials en 'data' para su posterior analisis&amp;#10;        filename = './data/trials_data.csv'&amp;#10;        with open(filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'contrast', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;            &amp;#10;        continueRoutine = False&amp;#10;&amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;logs.text = f&quot;Step Size = {step_size}&quot;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'s','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="grating" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="grating" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="15" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="trial"/>
  </Flow>
</PsychoPy2experiment>
