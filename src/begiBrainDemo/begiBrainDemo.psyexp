<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="2" valType="num" updates="None" name="Screen"/>
    <Param val="False" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="magnocellular_stimuli" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="MouseGaze" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="break_5s_">
      <RoutineSettingsComponent name="break_5s_" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="break_5s_" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_countdown" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_countdown" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(5-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Parvocelular_test">
      <RoutineSettingsComponent name="Parvocelular_test" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Parvocelular_test" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <DotsComponent name="noise_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="80000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_2" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1 - t / 10 if 0 &lt;= t &lt;= 10 else 0" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="noise_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="80000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_4" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1 - t / 10 if 0 &lt;= t &lt;= 10 else 0" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;posicion_estimulo = [stim_x, stim_y] = [0, 0];&amp;#10;stim_2.sf = frecuencia_espacial;&amp;#10;stim_2.orientation = orientacion;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = 0,0&amp;#10;stim_2.sf = frecuencia_espacial&amp;#10;stim_2.orientation = orientacion" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_2.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;logs_parametros_trial_2.setText(&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Posicion Angular: {posicion_angular:.2f}\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Frecuencia Espacial: {frecuencia_espacial:.2f}\n&quot;&amp;#10;    f&quot;Frecuencia Temporal: {frecuencia_temporal:.3f}\n&quot;&amp;#10;    f&quot;Contraste: {contraste:.2f}\n&quot;&amp;#10;    f&quot;Color: {color_r},{color_g},{color_b}\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo:.2f}&quot;&amp;#10;    f&quot;FFT: {FFT:.2f}&quot;&amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;stim_2.setPhase(frecuencia_temporal,'+')&amp;#10;#stim_2.setPhase(0.01,'+')&amp;#10;stim_2.draw()&amp;#10;&amp;#10;## FFT if activated&amp;#10;&amp;#10;if FFT != 0:&amp;#10;    frames_por_ciclo = int((frecuencia_monitor / FFT) / 2)&amp;#10;    opacidad = 1 if (frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo else 0&amp;#10;else:&amp;#10;    opacidad = 1&amp;#10;&amp;#10;stim_2.opacity = opacidad&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_2.setText(&quot;El ratón está dentro de la circunferencia&quot;)&amp;#10;    # Aquí puedes hacer que el estímulo grating sea visible si es necesario&amp;#10;      # o cualquier acción que quieras realizar&amp;#10;else:&amp;#10;    logs_2.setText(&quot;El ratón está fuera de la circunferencia&quot;)&amp;#10;    # El ratón está fuera de la circunferencia&amp;#10;    # Aquí puedes hacer que el estímulo grating sea invisible si es necesario&amp;#10;    # o cualquier acción que quieras realizar&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_2.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_2.setText(`Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Posicion Angular: ${util.pad(Number.parseFloat(posicion_angular).toFixed(2), 1)}&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Frecuencia Espacial: ${util.pad(Number.parseFloat(frecuencia_espacial).toFixed(2), 1)}&amp;#10;Frecuencia Temporal: ${util.pad(Number.parseFloat(frecuencia_temporal).toFixed(3), 1)}&amp;#10;Contraste: ${util.pad(Number.parseFloat(contraste).toFixed(2), 1)}&amp;#10;Color: ${color_r},${color_g},${color_b}&amp;#10;Tamaño: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}FFT: ${util.pad(Number.parseFloat(FFT).toFixed(2), 1)}`&amp;#10;);&amp;#10;stim_2.setPhase(frecuencia_temporal, &quot;+&quot;);&amp;#10;stim_2.draw();&amp;#10;if ((FFT !== 0)) {&amp;#10;    frames_por_ciclo = Number.parseInt(((frecuencia_monitor / FFT) / 2));&amp;#10;    opacidad = (((frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo) ? 1 : 0);&amp;#10;} else {&amp;#10;    opacidad = 1;&amp;#10;}&amp;#10;stim_2.opacity = opacidad;&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_2.setText(&quot;El rat\u00f3n est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_2.setText(&quot;El rat\u00f3n est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="foveal_region_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="foveal_region_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="slider_2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.1" valType="code" updates="None" name="initVal"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <GratingComponent name="stim_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="color_r,color_g/100,color_b" valType="color" updates="set every repeat" name="color"/>
        <Param val="hsv" valType="str" updates="constant" name="colorSpace"/>
        <Param val="contraste" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_2" valType="code" updates="None" name="name"/>
        <Param val="0.7" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every frame" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
    <Routine name="calibration_routine">
      <RoutineSettingsComponent name="calibration_routine" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="calibration_routine" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <SliderComponent name="slider_3" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.5" valType="code" updates="None" name="initVal"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="periphereal_region_diameter = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="periphereal_region_diameter = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="#periphereal_region_diameter = 0.5&amp;#10;&amp;#10;if slider_3.getRating() is not None:&amp;#10;    periphereal_region_diameter = slider_3.getRating()&amp;#10;    &amp;#10;log_calibration.setText(f&quot;Foveal region diameter: {periphereal_region_diameter:.2f}&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((slider_3.getRating() !== null)) {&amp;#10;    periphereal_region_diameter = slider_3.getRating();&amp;#10;}&amp;#10;log_calibration.setText(`Foveal region diameter: ${util.pad(Number.parseFloat(periphereal_region_diameter).toFixed(2), 1)}`);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ButtonComponent name="button" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0" valType="num" updates="constant" name="borderWidth"/>
        <Param val="" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="darkgrey" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(0.45, 0.450)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click here when calibrated" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <PolygonComponent name="periphereal_region_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every frame" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="log_calibration" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="log_calibration" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="logo_bio" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/BIOBIZKAIA_horizontal_CMYK.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="logo_bio" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.4, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="logo_compneurolab" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/compneuro_horizontal.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="logo_compneurolab" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_title" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_title" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="TEST DE EVALUACIÓN DE LOS SISTEMAS MAGNOCELULAR Y PARVOCELULAR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_instructions" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_instructions" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.20)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="instruction_no = 0&amp;#10;messages_instructions = [&quot;Bienvenido/a al estudio sobre el rendimiento del sistema visual. En este experimento, observarás varios estímulos visuales presentados en diferentes zonas de la pantalla, que corresponden a la zona periférica o central de la retina.&quot;,&amp;#10;&quot;Se te mostrarán parches de Gabor, que varían en posición, color, fase, frecuencia espacial y temporal. Tu tarea es mantener la mirada fijada en el centro de la pantalla mientras observas los cambios en los estímulos periféricos sin mover los ojos.&quot;,&amp;#10;&quot;Cada cinco ensayos, tendrás un descanso de 5 segundos. Es importante mantener la atención durante los ensayos y descansar durante los intervalos para optimizar tu rendimiento.&quot;,&amp;#10;&quot;Comenzaremos con un ensayo de práctica antes de proceder con los ensayos que serán registrados.&quot;,&amp;#10;&quot;Presiona la barra espaciadora cuando estés listo/a para comenzar. Si tienes alguna pregunta o necesitas más información, no dudes en preguntar.&quot;]" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="instruction_no = 0;&amp;#10;messages_instructions = [&quot;Bienvenido/a al estudio sobre el rendimiento del sistema visual. En este experimento, observar\u00e1s varios est\u00edmulos visuales presentados en diferentes zonas de la pantalla, que corresponden a la zona perif\u00e9rica o central de la retina.&quot;, &quot;Se te mostrar\u00e1n parches de Gabor, que var\u00edan en posici\u00f3n, color, fase, frecuencia espacial y temporal. Tu tarea es mantener la mirada fijada en el centro de la pantalla mientras observas los cambios en los est\u00edmulos perif\u00e9ricos sin mover los ojos.&quot;, &quot;Cada cinco ensayos, tendr\u00e1s un descanso de 5 segundos. Es importante mantener la atenci\u00f3n durante los ensayos y descansar durante los intervalos para optimizar tu rendimiento.&quot;, &quot;Comenzaremos con un ensayo de pr\u00e1ctica antes de proceder con los ensayos que ser\u00e1n registrados.&quot;, &quot;Presiona la barra espaciadora cuando est\u00e9s listo/a para comenzar. Si tienes alguna pregunta o necesitas m\u00e1s informaci\u00f3n, no dudes en preguntar.&quot;];&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#text_instructions.alignHoriz='left'&amp;#10;#text_instructions.wrapWidth=1.0&amp;#10;instruction_no = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instruction_no = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_instructions.text = messages_instructions[instruction_no]&amp;#10;    &amp;#10;if instruction_no == (len(messages_instructions) - 1):&amp;#10;    button_next_instruction.opacity = 0&amp;#10;    #button_next_instruction.status = PAUSED&amp;#10;else:&amp;#10;    button_next_instruction.opacity = 1.0&amp;#10;    #button_next_instruction.status = STARTED&amp;#10;&amp;#10;if instruction_no == 0:&amp;#10;    button_previous_instruction.opacity = 0&amp;#10;    #button_previous_instruction.status = PAUSED&amp;#10;else:&amp;#10;    button_previous_instruction.opacity = 1.0&amp;#10;    #button_previous_instruction.status = STARTED&amp;#10;&amp;#10;###################################################&amp;#10;####________________EVENTS_____________________####&amp;#10;###################################################&amp;#10;&amp;#10;keys = event.getKeys()  # Cada llamada al buffer lo vaciía (teoricamente)&amp;#10;&amp;#10;if 'space' in keys:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;text_instructions.text = messages_instructions[instruction_no];&amp;#10;if ((instruction_no === (messages_instructions.length - 1))) {&amp;#10;    button_next_instruction.opacity = 0;&amp;#10;} else {&amp;#10;    button_next_instruction.opacity = 1.0;&amp;#10;}&amp;#10;if ((instruction_no === 0)) {&amp;#10;    button_previous_instruction.opacity = 0;&amp;#10;} else {&amp;#10;    button_previous_instruction.opacity = 1.0;&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ButtonComponent name="button_next_instruction" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0.1" valType="num" updates="constant" name="borderWidth"/>
        <Param val="if instruction_no &lt; len(messages_instructions)-1:&amp;#10;    instruction_no+=1" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 0.0039, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_next_instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(0.5, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Siguiente --&gt;" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <ButtonComponent name="button_previous_instruction" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0.1" valType="num" updates="constant" name="borderWidth"/>
        <Param val="if 0 &lt; instruction_no:&amp;#10;    instruction_no-=1" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 0.0039, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_previous_instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(-0.5, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;--Anterior" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <KeyboardComponent name="key_resp_skip_instructions" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_skip_instructions" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="load_screen_config">
      <RoutineSettingsComponent name="load_screen_config" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="load_screen_config" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="periphereal_region_diameter = 0&amp;#10;&amp;#10;################################&amp;#10;## CONFIGURACION MODIFICABLE: ##&amp;#10;################################&amp;#10;nombre_pantalla = 'pantalla5'&amp;#10;distancia_eyetracker = 0.65 # m&amp;#10;alpha = angulo_region_central = 9 # º DEG" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="periphereal_region_diameter = 0;&amp;#10;nombre_pantalla = &quot;pantalla5&quot;;&amp;#10;distancia_eyetracker = 0.65;&amp;#10;alpha = angulo_region_central = 9;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import json&amp;#10;import math&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;# Cargar el archivo JSON&amp;#10;def cargar_configuracion(nombre_pantalla):&amp;#10;    with open('screen_config.json', 'r') as file:&amp;#10;        config = json.load(file)&amp;#10;    &amp;#10;    # Seleccionar la configuración específica&amp;#10;    pantalla_config = config.get(nombre_pantalla)&amp;#10;    &amp;#10;    if pantalla_config:&amp;#10;        nombre = pantalla_config['nombre']&amp;#10;        tamanyo_pulgadas = pantalla_config['tamanyo']&amp;#10;        dim_y = pantalla_config['dim_y']&amp;#10;        &amp;#10;        print(f'Se ha cargado la siguiente configuracion:\n'&amp;#10;              f'Pantalla {nombre_pantalla} de {tamanyo_pulgadas} pulgadas con altura {dim_y} m')&amp;#10;        return nombre, tamanyo_pulgadas, dim_y&amp;#10;    else:&amp;#10;        print(&quot;Configuración de pantalla no encontrada.&quot;)&amp;#10;        return None, None, None  # Devolver None para cada valor esperado&amp;#10;&amp;#10;nombre, tamanyo_pulgadas, dim_y = cargar_configuracion(nombre_pantalla)&amp;#10;&amp;#10;&amp;#10;if nombre:  # Comprobar que nombre no es None antes de usar las variables&amp;#10;    # Calcular el diámetro de la frontera de la periferia&amp;#10;   &amp;#10;    diameter_unit, diameter_m = calculate_diameter(alpha, distancia_eyetracker, dim_y)&amp;#10;    periphereal_region_diameter = diameter_unit&amp;#10;&amp;#10;    log = f'Se ha cargado la configuracion de la {nombre_pantalla}:\n Pantalla {nombre} de {tamanyo_pulgadas} pulgadas con altura {dim_y} m.'&amp;#10;    print(log)&amp;#10;    &amp;#10;logs2.setText(&amp;#10;             f'Se ha cargado la configuracion de la {nombre_pantalla}:\n Pantalla {nombre} de {tamanyo_pulgadas} pulgadas con altura {dim_y} m\n' &amp;#10;             f'Para una distancia de {distancia_eyetracker} m entre el sujeto y la pantalla, el diametro debe ser de {diameter_unit:.2f} u.\n'&amp;#10;             f'El diámetro equivalente es de {diameter_m:.2f} m'&amp;#10;             )" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="periphereal_region_result" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_result" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="foveal_region_result" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="foveal_region_result" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="time_daemon" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;5:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; 5)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="time_daemon" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="pallete">
      <RoutineSettingsComponent name="pallete" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="pallete" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="gratings = [&amp;#10;grating_1, &amp;#10;grating_2, &amp;#10;grating_3, &amp;#10;grating_4, &amp;#10;grating_5, &amp;#10;grating_6]&amp;#10;&amp;#10;positions = [&amp;#10;(-0.5, 0.25),&amp;#10;( 0,   0.25),&amp;#10;( 0.5, 0.25),&amp;#10;(-0.5,-0.25),&amp;#10;( 0,  -0.25),&amp;#10;( 0.5,-0.25)&amp;#10;]&amp;#10;&amp;#10;contrasts = [&amp;#10;0,&amp;#10;0.2,&amp;#10;0.4,&amp;#10;0.6,&amp;#10;0.8,&amp;#10;1.0&amp;#10;]&amp;#10;&amp;#10;for i, grating in enumerate(gratings):&amp;#10;    grating.size = (0.25, 0.25)&amp;#10;    grating.pos = positions[i]&amp;#10;    grating.mask = &quot;circle&quot;&amp;#10;    grating.sf = 10&amp;#10;    grating.contrast = contrasts[i]&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="logs_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <GratingComponent name="grating_1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="circle" valType="file" updates="constant" name="mask"/>
        <Param val="grating_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
    <Routine name="GazePoint_test">
      <RoutineSettingsComponent name="GazePoint_test" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="GazePoint_test" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;FPOGX = 0&amp;#10;FPOGY = 0&amp;#10;FPOGV = 0&amp;#10;CX = 0&amp;#10;CY = 0&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;print(&quot;DIAL:&quot;, DIAL)&amp;#10;print(&quot;HR:&quot;, HR)&amp;#10;print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;console.log(data_r);&amp;#10;FPOGX = 0;&amp;#10;FPOGY = 0;&amp;#10;FPOGV = 0;&amp;#10;CX = 0;&amp;#10;CY = 0;&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;console.log(datalist);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;console.log(&quot;DIAL:&quot;, DIAL);&amp;#10;console.log(&quot;HR:&quot;, HR);&amp;#10;console.log(&quot;\n&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_6" plugin="None">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="GP_logs" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="polygon_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="DIAL*360" valType="num" updates="set every frame" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="line" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="BL_1_SPATIAL_FREQ">
      <RoutineSettingsComponent name="BL_1_SPATIAL_FREQ" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_1_SPATIAL_FREQ" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim.sf = frecuencia_espacial;&amp;#10;stim.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim.sf = frecuencia_espacial&amp;#10;stim.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial.alignText='left'&amp;#10;logs_parametros_trial.anchorHoriz='left'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial.setText(&amp;#10;    f&quot;Prueba 1 - Frecuencia espacial\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;Frecuencia Espacial: {frecuencia_espacial:.2f}\n&quot;   &amp;#10;)&amp;#10;'''&amp;#10;logs_screen_specs.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;'''&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial.setText(`Prueba 1 - Frecuencia espacial&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}&amp;#10;Frecuencia Espacial: ${util.pad(Number.parseFloat(frecuencia_espacial).toFixed(2), 1)}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_2.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_2.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="stim" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sqr" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <PolygonComponent name="gaze" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="TEMPLATE_ROUTINE">
      <RoutineSettingsComponent name="TEMPLATE_ROUTINE" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="TEMPLATE_ROUTINE" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_12" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim.sf = frecuencia_espacial;&amp;#10;stim.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim.sf = frecuencia_espacial&amp;#10;stim.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial.setText(&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Posicion Angular: {posicion_angular:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Diametro 9º: {diametros_central_periferica[0]:.2f}, {diametros_central_periferica[1]:.2f}\n&quot;&amp;#10;    f&quot;Diametro {excentricidad}º: {diametros_estimulo[0]:.2f}, {diametros_estimulo[1]:.2f}\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Frecuencia Espacial: {frecuencia_espacial:.2f}\n&quot;&amp;#10;    f&quot;Frecuencia Temporal: {frecuencia_temporal:.3f}\n&quot;&amp;#10;    f&quot;Contraste: {contraste:.2f}\n&quot;&amp;#10;    f&quot;Color: {color_r},{color_g},{color_b}\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;FFT: {FFT:.2f}\n&quot;&amp;#10;)&amp;#10;&amp;#10;logs_screen_specs.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;stim.setPhase(frecuencia_temporal,'+')&amp;#10;#stim.setPhase(0.01,'+')&amp;#10;stim.draw()&amp;#10;&amp;#10;#dots_no = noise_dots_no # prueba --&gt; cargar variable del csv y volcar al estimulo&amp;#10;&amp;#10;## FFT if activated&amp;#10;&amp;#10;if FFT != 0:&amp;#10;    frames_por_ciclo = int((frecuencia_monitor / FFT) / 2)&amp;#10;    opacidad = 1 if (frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo else 0&amp;#10;else:&amp;#10;    opacidad = 1&amp;#10;&amp;#10;stim.opacity = opacidad&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial.setText(`Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Posicion Angular: ${util.pad(Number.parseFloat(posicion_angular).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Diametro 9º: ${util.pad(Number.parseFloat(diametros_central_periferica[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(diametros_central_periferica[1]).toFixed(2), 1)}&amp;#10;Diametro ${excentricidad}º: ${util.pad(Number.parseFloat(diametros_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(diametros_estimulo[1]).toFixed(2), 1)}&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Frecuencia Espacial: ${util.pad(Number.parseFloat(frecuencia_espacial).toFixed(2), 1)}&amp;#10;Frecuencia Temporal: ${util.pad(Number.parseFloat(frecuencia_temporal).toFixed(3), 1)}&amp;#10;Contraste: ${util.pad(Number.parseFloat(contraste).toFixed(2), 1)}&amp;#10;Color: ${color_r},${color_g},${color_b}&amp;#10;Tamaño: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;FFT: ${util.pad(Number.parseFloat(FFT).toFixed(2), 1)}`&amp;#10;);&amp;#10;logs_screen_specs.setText(`Pantalla: ${nombre_pantalla}&amp;#10;Altura pantalla: ${dim_y} m&amp;#10;Tamaño: ${tamanyo_pulgadas}&quot;&amp;#10;Distancia paciente - pantalla (eyetracker): ${distancia_eyetracker} m&amp;#10;Diametro umbral periferia-centro (normalizado): ${util.pad(Number.parseFloat(periphereal_region_diameter).toFixed(2), 1)} u`&amp;#10;);&amp;#10;stim.setPhase(frecuencia_temporal, &quot;+&quot;);&amp;#10;stim.draw();&amp;#10;if ((FFT !== 0)) {&amp;#10;    frames_por_ciclo = Number.parseInt(((frecuencia_monitor / FFT) / 2));&amp;#10;    opacidad = (((frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo) ? 1 : 0);&amp;#10;} else {&amp;#10;    opacidad = 1;&amp;#10;}&amp;#10;stim.opacity = opacidad;&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="periphereal_region_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="3" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="gaze_fixation_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="3" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_fixation_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <SliderComponent name="slider_5" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.1" valType="code" updates="None" name="initVal"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <GratingComponent name="stim_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="color_r, color_g, color_b" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="contraste" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <KeyboardComponent name="key_resp_8" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_8" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <DotsComponent name="noise_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="3" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="14000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_7" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="noise_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="3" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="14000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_8" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <EyetrackerRecordComponent name="etRecord_3" plugin="None">
        <Param val="Start and Stop" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
      <RegionOfInterestComponent name="roi_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="False" valType="bool" updates="None" name="debug"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="none" valType="str" updates="None" name="endRoutineOn"/>
        <Param val="0.1" valType="num" updates="None" name="lookDur"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="roi_3" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="every look" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.35, 0.35)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="roi onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </RegionOfInterestComponent>
      <PolygonComponent name="polygon_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_coordenadas_mirada_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_screen_specs_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_screen_specs_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="GP_data_adq_backend_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_2.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_2.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.7, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="DIAL_REPRESENTATION_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="DIAL_REPRESENTATION_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="DIAL*360" valType="num" updates="set every frame" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="gaze_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;5:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; 5)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BL_8_TEMPORAL_FREQ">
      <RoutineSettingsComponent name="BL_8_TEMPORAL_FREQ" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_8_TEMPORAL_FREQ" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_10" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim_3.sf = frecuencia_espacial;&amp;#10;stim_3.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim_3.sf = frecuencia_espacial&amp;#10;stim_3.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_3.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_3.setText(&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Posicion Angular: {posicion_angular:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Diametro 9º: {diametros_central_periferica[0]:.2f}, {diametros_central_periferica[1]:.2f}\n&quot;&amp;#10;    f&quot;Diametro {excentricidad}º: {diametros_estimulo[0]:.2f}, {diametros_estimulo[1]:.2f}\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Frecuencia Temporal: {frecuencia_temporal:.3f}\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo:.2f}\n&quot;&amp;#10;)&amp;#10;&amp;#10;logs_screen_specs_2.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;stim_3.setPhase(frecuencia_temporal,'+')&amp;#10;#stim.setPhase(0.01,'+')&amp;#10;stim_3.draw()&amp;#10;&amp;#10;#dots_no = noise_dots_no # prueba --&gt; cargar variable del csv y volcar al estimulo&amp;#10;&amp;#10;## FFT if activated&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_4.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_4.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_3.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_3.setText(`Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Posicion Angular: ${util.pad(Number.parseFloat(posicion_angular).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Diametro 9º: ${util.pad(Number.parseFloat(diametros_central_periferica[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(diametros_central_periferica[1]).toFixed(2), 1)}&amp;#10;Diametro ${excentricidad}º: ${util.pad(Number.parseFloat(diametros_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(diametros_estimulo[1]).toFixed(2), 1)}&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Frecuencia Temporal: ${util.pad(Number.parseFloat(frecuencia_temporal).toFixed(3), 1)}&amp;#10;Tamaño: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}`&amp;#10;);&amp;#10;logs_screen_specs_2.setText(`Pantalla: ${nombre_pantalla}&amp;#10;Altura pantalla: ${dim_y} m&amp;#10;Tamaño: ${tamanyo_pulgadas}&quot;&amp;#10;Distancia paciente - pantalla (eyetracker): ${distancia_eyetracker} m&amp;#10;Diametro umbral periferia-centro (normalizado): ${util.pad(Number.parseFloat(periphereal_region_diameter).toFixed(2), 1)} u`&amp;#10;);&amp;#10;stim_3.setPhase(frecuencia_temporal, &quot;+&quot;);&amp;#10;stim_3.draw();&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_4.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_4.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="periphereal_region_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="3" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="gaze_fixation_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="3" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_fixation_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <SliderComponent name="slider_4" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.1" valType="code" updates="None" name="initVal"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <GratingComponent name="stim_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <KeyboardComponent name="key_resp_7" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_7" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <DotsComponent name="noise_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="3" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="14000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_5" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="noise_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="3" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="14000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_6" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <PolygonComponent name="polygon_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_coordenadas_mirada_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_screen_specs_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_screen_specs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="GP_data_adq_backend_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_2.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_2.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.7, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="DIAL_REPRESENTATION_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="DIAL_REPRESENTATION_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="DIAL*360" valType="num" updates="set every frame" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="gaze_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;5:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; 5)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BL_3_CONTRAST">
      <RoutineSettingsComponent name="BL_3_CONTRAST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_3_CONTRAST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_8" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim_5.sf = frecuencia_espacial;&amp;#10;stim_5.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial_5.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_5.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim_5.sf = frecuencia_espacial&amp;#10;stim_5.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial_5.alignText='left'&amp;#10;logs_parametros_trial_5.anchorHoriz='left'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_5.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_5.setText(&amp;#10;    f&quot;Prueba 3 - Contraste\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;Contraste: {contraste:.2f}\n&quot;   &amp;#10;)&amp;#10;'''&amp;#10;logs_screen_specs.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;'''&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_6.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_6.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_5.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_5.setText(`Prueba 3 - Contraste&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}&amp;#10;Contraste: ${util.pad(Number.parseFloat(contraste).toFixed(2), 1)}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_6.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_6.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_9" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_9" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_5.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_5.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="stim_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="contraste" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sqr" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <PolygonComponent name="gaze_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_5" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="BL_2_COLOR">
      <RoutineSettingsComponent name="BL_2_COLOR" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_2_COLOR" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_14" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial_6.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_6.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;#stim_6.sf = frecuencia_espacial&amp;#10;#stim_6.orientation = orientacion&amp;#10;#stim_img.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial_6.alignText='left'&amp;#10;logs_parametros_trial_6.anchorHoriz='left'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_6.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_6.setText(&amp;#10;    f&quot;Prueba 2 - Color/saturación\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    #f&quot;Saturacion: {saturacion:.2f}\n&quot;   &amp;#10;)&amp;#10;'''&amp;#10;logs_screen_specs.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;'''&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_7.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_7.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_6.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_6.setText(`Prueba 2 - Color/saturación&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_7.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_7.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_14" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_10" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_10" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_5.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_5.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_10" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_6" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="gaze_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_6" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_stim_backend" plugin="None">
        <Param val="import numpy as np&amp;#10;from PIL import Image&amp;#10;import matplotlib.pyplot as plt&amp;#10;&amp;#10;&amp;#10;def save_gabor_patch_image(frequency, size, c1, c2):&amp;#10;    amp, f = generate_gabor_patch(frequency, size)&amp;#10;    &amp;#10;    # Convertir colores a numpy arrays y expandir dimensiones para el canal de transparencia&amp;#10;    c1 = np.array(c1)&amp;#10;    c2 = np.array(c2)&amp;#10;    &amp;#10;    # Calcular los valores de color para el parche&amp;#10;    im_rgb_vals = (c1 * amp[:, :, None]) + (c2 * (1 - amp[:, :, None]))&amp;#10;    &amp;#10;    # Crear el canal de alfa (transparencia): 1 donde hay el parche, 0 en el fondo&amp;#10;    alpha_channel = f&amp;#10;    &amp;#10;    # Combinar los valores RGB con el canal alfa para crear una imagen RGBA&amp;#10;    im_rgba_vals = np.dstack((im_rgb_vals, alpha_channel))&amp;#10;    &amp;#10;    # Convertir a imagen&amp;#10;    im = Image.fromarray((im_rgba_vals * 255).astype('uint8'), 'RGBA')&amp;#10;    im.save(f&quot;C:/Users/akoun/Desktop/Biocruces/siburmuin/src/begiBrainDemo/images/custom_stim.png&quot;)&amp;#10;&amp;#10;def generate_gabor_patch(frequency, size):&amp;#10;    im_range = np.arange(size)&amp;#10;    x, y = np.meshgrid(im_range, im_range)&amp;#10;    dx = x - size // 2&amp;#10;    dy = y - size // 2&amp;#10;    t = np.arctan2(dy, dx)&amp;#10;    r = np.sqrt(dx ** 2 + dy ** 2)&amp;#10;    x = r * np.cos(t)&amp;#10;    y = r * np.sin(t)&amp;#10;    &amp;#10;    # Transición brusca para los colores (líneas) en el patrón Gabor&amp;#10;    amp = np.where(np.cos(2 * np.pi * (x * frequency)) &gt;= 0, 1, 0)&amp;#10;    f = np.where(r &lt;= size // 2, 1, 0)&amp;#10;    &amp;#10;    return amp, f&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;function random_frequency() {&amp;#10;    return Math.random.uniform(0.01, 0.1);&amp;#10;}&amp;#10;frequency = random_frequency();&amp;#10;size = 500;&amp;#10;c1 = [color_1_r, color_1_g, color_1_b];&amp;#10;c2 = [color_2_r, color_2_g, color_2_b];&amp;#10;save_gabor_patch_image(frequency, size, c1, c2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;&amp;#10;def random_frequency():&amp;#10;    return random.uniform(0.01, 0.1)&amp;#10;&amp;#10;# Parámetros aleatorios&amp;#10;frequency = random_frequency()&amp;#10;size = 500&amp;#10;c1 = [color_1_r,color_1_g,color_1_b]&amp;#10;c2 = [color_2_r,color_2_g,color_2_b]&amp;#10;&amp;#10;#logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;save_gabor_patch_image(frequency, size, c1, c2)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_stim_backend" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="stim_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="C:\Users\akoun\Desktop\Biocruces\siburmuin\src\begiBrainDemo\images\custom_stim.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stim_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="BL_4_TEMPORAL_FREQ">
      <RoutineSettingsComponent name="BL_4_TEMPORAL_FREQ" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_4_TEMPORAL_FREQ" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_15" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 10  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 10;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim_7.sf = frecuencia_espacial;&amp;#10;stim_7.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial_7.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_7.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim_7.sf = frecuencia_espacial&amp;#10;stim_7.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial_7.alignText='left'&amp;#10;logs_parametros_trial_7.anchorHoriz='left'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_7.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_7.setText(&amp;#10;    f&quot;Prueba 4 - Frecuencia Temporal\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;FFT: {FFT:.2f}\n&quot;   &amp;#10;)&amp;#10;'''&amp;#10;logs_screen_specs.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;'''&amp;#10;####################################################&amp;#10;#################_______FFT______###################&amp;#10;####################################################&amp;#10;frames_por_ciclo = int((frecuencia_monitor / FFT) / 2)&amp;#10;opacidad = 1 if (frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo else 0&amp;#10;stim_7.opacity = opacidad&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_8.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_8.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_7.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_7.setText(`Prueba 4 - Frecuencia Temporal&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}&amp;#10;FFT: ${util.pad(Number.parseFloat(FFT).toFixed(2), 1)}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / FFT) / 2));&amp;#10;opacidad = (((frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo) ? 1 : 0);&amp;#10;stim_7.opacity = opacidad;&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_8.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_8.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_15" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_11" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_11" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_5.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_5.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_11" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_12" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_12" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_8" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_7" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="stim_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sqr" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <PolygonComponent name="gaze_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_7" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="gabor_trial">
      <RoutineSettingsComponent name="gabor_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="gabor_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_16" plugin="None">
        <Param val="import numpy as np&amp;#10;from PIL import Image&amp;#10;import matplotlib.pyplot as plt&amp;#10;&amp;#10;&amp;#10;def save_gabor_patch_image(frequency, size, c1, c2):&amp;#10;    amp, f = generate_gabor_patch(frequency, size)&amp;#10;    &amp;#10;    # Convertir colores a numpy arrays y expandir dimensiones para el canal de transparencia&amp;#10;    c1 = np.array(c1)&amp;#10;    c2 = np.array(c2)&amp;#10;    &amp;#10;    # Calcular los valores de color para el parche&amp;#10;    im_rgb_vals = (c1 * amp[:, :, None]) + (c2 * (1 - amp[:, :, None]))&amp;#10;    &amp;#10;    # Crear el canal de alfa (transparencia): 1 donde hay el parche, 0 en el fondo&amp;#10;    alpha_channel = f&amp;#10;    &amp;#10;    # Combinar los valores RGB con el canal alfa para crear una imagen RGBA&amp;#10;    im_rgba_vals = np.dstack((im_rgb_vals, alpha_channel))&amp;#10;    &amp;#10;    # Convertir a imagen&amp;#10;    im = Image.fromarray((im_rgba_vals * 255).astype('uint8'), 'RGBA')&amp;#10;    im.save(f&quot;C:/Users/akoun/Desktop/Biocruces/siburmuin/src/begiBrainDemo/images/custom_stim.png&quot;)&amp;#10;&amp;#10;def generate_gabor_patch(frequency, size):&amp;#10;    im_range = np.arange(size)&amp;#10;    x, y = np.meshgrid(im_range, im_range)&amp;#10;    dx = x - size // 2&amp;#10;    dy = y - size // 2&amp;#10;    t = np.arctan2(dy, dx)&amp;#10;    r = np.sqrt(dx ** 2 + dy ** 2)&amp;#10;    x = r * np.cos(t)&amp;#10;    y = r * np.sin(t)&amp;#10;    &amp;#10;    # Transición brusca para los colores (líneas) en el patrón Gabor&amp;#10;    amp = np.where(np.cos(2 * np.pi * (x * frequency)) &gt;= 0, 1, 0)&amp;#10;    f = np.where(r &lt;= size // 2, 1, 0)&amp;#10;    &amp;#10;    return amp, f&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;function random_frequency() {&amp;#10;    return Math.random.uniform(0.01, 0.1);&amp;#10;}&amp;#10;frequency = random_frequency();&amp;#10;size = 500;&amp;#10;c1 = [color_1_r, color_1_g, color_1_b];&amp;#10;c2 = [color_2_r, color_2_g, color_2_b];&amp;#10;logs.text = `freq = ${util.pad(Number.parseFloat(frequency).toFixed(2), 1)}&amp;#10;c1 = (${util.pad(Number.parseFloat(c1[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c1[1]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c1[2]).toFixed(2), 1)})&amp;#10;c2 = (${util.pad(Number.parseFloat(c2[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c2[1]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c2[2]).toFixed(2), 1)})`&amp;#10;;&amp;#10;save_gabor_patch_image(frequency, size, c1, c2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;&amp;#10;#def random_color():&amp;#10;#    return (random.random(), random.random(), random.random())&amp;#10;&amp;#10;def random_frequency():&amp;#10;    return random.uniform(0.01, 0.1)&amp;#10;&amp;#10;# Parámetros aleatorios&amp;#10;frequency = random_frequency()&amp;#10;size = 500&amp;#10;c1 = [color_1_r,color_1_g,color_1_b]#random_color()&amp;#10;c2 = [color_2_r,color_2_g,color_2_b]&amp;#10;&amp;#10;logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;save_gabor_patch_image(frequency, size, c1, c2)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_16" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="C:\Users\akoun\Desktop\Biocruces\siburmuin\src\begiBrainDemo\images\custom_stim.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="20" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_12" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_12" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_9" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="BL_5_SEMANTIC_STIM">
      <RoutineSettingsComponent name="BL_5_SEMANTIC_STIM" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_5_SEMANTIC_STIM" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="semantic_stim" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="semantic_stim" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_13" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_13" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="logs_background_13" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_17" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="logs_parametros_trial_8.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_8.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="logs_parametros_trial_8.alignText='left'&amp;#10;logs_parametros_trial_8.anchorHoriz='left'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="logs_parametros_trial_8.setText(&amp;#10;    f&quot;Prueba 5 - Estímulos semánticos\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;  &amp;#10;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="logs_parametros_trial_8.setText(`Prueba 5 - Estímulos semánticos&amp;#10;Intento: ${intento}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}`&amp;#10;);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_17" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="logs_parametros_trial_8" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="right_arrow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="right_arrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="90" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrow" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="left_arrow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="left_arrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="-90" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrow" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="right_arrow_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="right_arrow_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Animal" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="left_arrow_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="left_arrow_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Inerte" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="CONTRAST_STAIRCASE_TEST">
      <RoutineSettingsComponent name="CONTRAST_STAIRCASE_TEST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="CONTRAST_STAIRCASE_TEST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_18" plugin="None">
        <Param val="from psychopy import core  # Importa core para poder hacer la pausa&amp;#10;&amp;#10;def show_noise(dots_white, dots_black):&amp;#10;    duration = 0.5&amp;#10;    # Habilitar los puntos de ruido&amp;#10;    dots_white.setAutoDraw(True)&amp;#10;    dots_black.setAutoDraw(True)&amp;#10;    &amp;#10;    # Obtener el reloj del experimento&amp;#10;    noise_timer = core.Clock()&amp;#10;    noise_timer.reset()  # Resetea el reloj para iniciar la cuenta&amp;#10;    &amp;#10;    # Mostrar el ruido durante el tiempo de duración especificado&amp;#10;    while noise_timer.getTime() &lt; duration:&amp;#10;        # Aquí puedes seguir actualizando la ventana para que los puntos se vean&amp;#10;        win.flip()  # Actualiza la ventana en cada frame para mantener la animación&amp;#10;    &amp;#10;    # Desactivar los puntos de ruido&amp;#10;    dots_white.setAutoDraw(False)&amp;#10;    dots_black.setAutoDraw(False)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import csv&amp;#10;&amp;#10;# Variables estaticas&amp;#10;contrast_starting_value = 0.1&amp;#10;contrast_step_size = 0.01&amp;#10;stop_reversals = 10&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;contrast = contrast_starting_value&amp;#10;step = contrast_step_size&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_contrasts = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;&amp;#10;grating.contrast = contrast&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve el eestimulo&amp;#10;    response = False&amp;#10;&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve el estimulo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            contrast = max(0, contrast - step)  # Disminuir el contraste&amp;#10;            if last_direction == &quot;up&quot;:&amp;#10;                reversals += 1&amp;#10;                reversal_contrasts.append(contrast)&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else:  # Respuesta incorrecta: el paciente no ve el estimulo&amp;#10;        contrast += step  # Aumentar el contraste&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_contrasts.append(contrast)&amp;#10;        last_direction = &quot;up&quot;&amp;#10;        &amp;#10;    grating.setAutoDraw(False)&amp;#10;    show_noise(dots_white, dots_black)&amp;#10;    grating.setAutoDraw(True)&amp;#10;    # Actualizar el contraste del estímulo&amp;#10;    grating.contrast = contrast&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'contrast': contrast,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;    &amp;#10;    # Regla para aumentar la granularidad del test&amp;#10;    if (reversals % 3 == 0) and reversals != 0:&amp;#10;        step = step/2&amp;#10;        print(f&quot;New step = {step}&quot;)&amp;#10;        &amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        # almaceno trials en 'data' para su posterior analisis&amp;#10;        filename = './data/contrast_staircase_test_data.csv'&amp;#10;        with open(filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'contrast', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;            &amp;#10;        continueRoutine = False&amp;#10;&amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;logs_10.text = f&quot;Step Size = {step}&quot;&amp;#10;dots_white.setAutoDraw(False)&amp;#10;dots_black.setAutoDraw(False)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_18" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_14" plugin="None">
        <Param val="'s','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_14" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_10" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="grating" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="grating" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="15" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <DotsComponent name="dots_white" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="10000" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="10000" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
    </Routine>
    <Routine name="COLOR_STAIRCASE_TEST">
      <RoutineSettingsComponent name="COLOR_STAIRCASE_TEST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="COLOR_STAIRCASE_TEST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_19" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import csv&amp;#10;# Variables estaticas&amp;#10;saturation_starting_value = 80&amp;#10;saturation_step_size = 5&amp;#10;stop_reversals = 10&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;saturation = saturation_starting_value&amp;#10;step = saturation_step_size&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_saturations = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;&amp;#10;&amp;#10;# Inicializacion de variables TEMPORAL --&gt; EXTRAER COLORES DE CSV&amp;#10;frequency = 0.01&amp;#10;size = 500&amp;#10;c1_hsv = (360, 50, 100)&amp;#10;c2_hsv = (360, saturation, 100)&amp;#10;&amp;#10;#logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;save_gabor_patch_image(frequency, &amp;#10;                       size, &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c1_hsv)), &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c2_hsv)))" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve el eestimulo&amp;#10;    response = False&amp;#10;&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve el estimulo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            saturation = max(0, saturation - step)&amp;#10;            if last_direction == &quot;up&quot;:&amp;#10;                reversals += 1&amp;#10;                reversal_saturations.append(saturation)&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else:  # Respuesta incorrecta: el paciente no ve el estimulo&amp;#10;        saturation += step  # Aumentar el contraste&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_saturations.append(saturation)&amp;#10;        last_direction = &quot;up&quot;&amp;#10;    &amp;#10;    # Actualizar el color del estímulo&amp;#10;    &amp;#10;    #grating.contrast = contrast&amp;#10;&amp;#10;    c2_hsv = (360, saturation, 100)&amp;#10;&amp;#10;#logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;&amp;#10;    save_gabor_patch_image(frequency, &amp;#10;                       size, &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c1_hsv)), &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c2_hsv)))&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'saturation': saturation,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;    &amp;#10;    # Regla para aumentar la granularidad del test&amp;#10;    if (reversals % 3 == 0) and reversals != 0:&amp;#10;        step = step/2&amp;#10;        print(f&quot;New step = {step}&quot;)&amp;#10;        &amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        # almaceno trials en 'data' para su posterior analisis&amp;#10;        filename = './data/saturation_staircase_test_data.csv'&amp;#10;        with open(filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'saturation', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;            &amp;#10;        continueRoutine = False&amp;#10;&amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;logs_11.text = f&quot;Step Size = {step}&quot;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_19" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_15" plugin="None">
        <Param val="'s','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_15" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_11" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="gabor_generator" plugin="None">
        <Param val="import numpy as np&amp;#10;from PIL import Image&amp;#10;import matplotlib.pyplot as plt&amp;#10;&amp;#10;&amp;#10;def save_gabor_patch_image(frequency, size, c1, c2):&amp;#10;    amp, f = generate_gabor_patch(frequency, size)&amp;#10;    &amp;#10;    # Convertir colores a numpy arrays y expandir dimensiones para el canal de transparencia&amp;#10;    c1 = np.array(c1)&amp;#10;    c2 = np.array(c2)&amp;#10;    &amp;#10;    # Calcular los valores de color para el parche&amp;#10;    im_rgb_vals = (c1 * amp[:, :, None]) + (c2 * (1 - amp[:, :, None]))&amp;#10;    &amp;#10;    # Crear el canal de alfa (transparencia): 1 donde hay el parche, 0 en el fondo&amp;#10;    alpha_channel = f&amp;#10;    &amp;#10;    # Combinar los valores RGB con el canal alfa para crear una imagen RGBA&amp;#10;    im_rgba_vals = np.dstack((im_rgb_vals, alpha_channel))&amp;#10;    &amp;#10;    # Convertir a imagen&amp;#10;    im = Image.fromarray((im_rgba_vals * 255).astype('uint8'), 'RGBA')&amp;#10;    im.save(f&quot;./images/custom_stim.png&quot;)&amp;#10;&amp;#10;def generate_gabor_patch(frequency, size):&amp;#10;    im_range = np.arange(size)&amp;#10;    x, y = np.meshgrid(im_range, im_range)&amp;#10;    dx = x - size // 2&amp;#10;    dy = y - size // 2&amp;#10;    t = np.arctan2(dy, dx)&amp;#10;    r = np.sqrt(dx ** 2 + dy ** 2)&amp;#10;    x = r * np.cos(t)&amp;#10;    y = r * np.sin(t)&amp;#10;    &amp;#10;    # Transición brusca para los colores (líneas) en el patrón Gabor&amp;#10;    amp = np.where(np.cos(2 * np.pi * (x * frequency)) &gt;= 0, 1, 0)&amp;#10;    f = np.where(r &lt;= size // 2, 1, 0)&amp;#10;    &amp;#10;    return amp, f&amp;#10;def hsv_a_rgb(h, s, v):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Convierte un color desde HSV a RGB.&amp;#10;&amp;#10;    Parámetros:&amp;#10;    h (float): Matiz (Hue) en grados (0-360).&amp;#10;    s (float): Saturación (Saturation) como porcentaje (0-100).&amp;#10;    v (float): Valor (Value) como porcentaje (0-100).&amp;#10;&amp;#10;    Retorna:&amp;#10;    tuple: Una tupla con valores (R, G, B), cada uno en el rango de 0 a 255.&amp;#10;    &quot;&quot;&quot;&amp;#10;    h = h % 360&amp;#10;    s /= 100&amp;#10;    v /= 100&amp;#10;&amp;#10;    c = v * s&amp;#10;    x = c * (1 - abs((h / 60) % 2 - 1))&amp;#10;    m = v - c&amp;#10;&amp;#10;    if 0 &lt;= h &lt; 60:&amp;#10;        r, g, b = c, x, 0&amp;#10;    elif 60 &lt;= h &lt; 120:&amp;#10;        r, g, b = x, c, 0&amp;#10;    elif 120 &lt;= h &lt; 180:&amp;#10;        r, g, b = 0, c, x&amp;#10;    elif 180 &lt;= h &lt; 240:&amp;#10;        r, g, b = 0, x, c&amp;#10;    elif 240 &lt;= h &lt; 300:&amp;#10;        r, g, b = x, 0, c&amp;#10;    else:&amp;#10;        r, g, b = c, 0, x&amp;#10;&amp;#10;    r = (r + m) * 255&amp;#10;    g = (g + m) * 255&amp;#10;    b = (b + m) * 255&amp;#10;&amp;#10;    return int(round(r)), int(round(g)), int(round(b))&amp;#10;&amp;#10;&amp;#10;def normalizar_rgb(rgb):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Normaliza una tupla de valores RGB dividiendo cada componente por 255.&amp;#10;&amp;#10;    Parámetros:&amp;#10;    rgb (tuple): Una tupla con valores (R, G, B), cada uno en el rango de 0 a 255.&amp;#10;&amp;#10;    Retorna:&amp;#10;    tuple: Una tupla con valores normalizados (R, G, B), cada uno en el rango de 0 a 1.&amp;#10;    &quot;&quot;&quot;&amp;#10;    return tuple(component / 255 for component in rgb)" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="gabor_generator" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val=".\images\custom_stim.png" valType="file" updates="set every frame" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="20" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instructions"/>
    <Routine name="calibration_routine"/>
    <Routine name="TEMPLATE_ROUTINE"/>
    <Routine name="CONTRAST_STAIRCASE_TEST"/>
    <Routine name="COLOR_STAIRCASE_TEST"/>
    <Routine name="load_screen_config"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_1">
      <Param name="Selected rows" updates="None" val="0:15" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 1), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 5), ('tamanyo', 0.25)]), OrderedDict([('intento', 2), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25)]), OrderedDict([('intento', 3), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 15), ('tamanyo', 0.25)]), OrderedDict([('intento', 4), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 20), ('tamanyo', 0.25)]), OrderedDict([('intento', 5), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 25), ('tamanyo', 0.25)]), OrderedDict([('intento', 6), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 5), ('tamanyo', 0.25)]), OrderedDict([('intento', 7), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25)]), OrderedDict([('intento', 8), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 15), ('tamanyo', 0.25)]), OrderedDict([('intento', 9), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 20), ('tamanyo', 0.25)]), OrderedDict([('intento', 10), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 25), ('tamanyo', 0.25)]), OrderedDict([('intento', 11), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 5), ('tamanyo', 0.25)]), OrderedDict([('intento', 12), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25)]), OrderedDict([('intento', 13), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 15), ('tamanyo', 0.25)]), OrderedDict([('intento', 14), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 20), ('tamanyo', 0.25)]), OrderedDict([('intento', 15), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 25), ('tamanyo', 0.25)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL1.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_1_SPATIAL_FREQ"/>
    <LoopTerminator name="trials_bl_1"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_2">
      <Param name="Selected rows" updates="None" val="0:15" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 1.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'magno'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 1.0)]), OrderedDict([('intento', 2.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'magno'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.75)]), OrderedDict([('intento', 3.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'magno'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.5)]), OrderedDict([('intento', 4.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'magno'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.25)]), OrderedDict([('intento', 5.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'magno'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.15)]), OrderedDict([('intento', 6.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'neutro'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.1)]), OrderedDict([('intento', 7.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'neutro'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.05)]), OrderedDict([('intento', 8.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'neutro'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.01)]), OrderedDict([('intento', 9.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'neutro'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 1.0)]), OrderedDict([('intento', 10.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'neutro'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.1)]), OrderedDict([('intento', 11.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'parvo'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.05)]), OrderedDict([('intento', 12.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'parvo'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.0)]), OrderedDict([('intento', 13.0), ('orientacion', 45.0), ('posicion_angular', 0.0), ('tipo', 'parvo'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.25)]), OrderedDict([('intento', 14.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'parvo'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.25)]), OrderedDict([('intento', 15.0), ('orientacion', 135.0), ('posicion_angular', 0.0), ('tipo', 'parvo'), ('excentricidad', 0.0), ('frecuencia_espacial', 10.0), ('tamanyo', 0.25), ('color_1_r', 1.0), ('color_1_g', 1.0), ('color_1_b', 1.0), ('color_2_r', 1.0), ('color_2_g', 1.0), ('color_2_b', 1.0), ('contraste', 0.0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL2.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_2_COLOR"/>
    <LoopTerminator name="trials_bl_2"/>
    <Routine name="gabor_trial"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_3">
      <Param name="Selected rows" updates="None" val="0:15" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 1), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 1.0)]), OrderedDict([('intento', 2), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.5)]), OrderedDict([('intento', 3), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.25)]), OrderedDict([('intento', 4), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.1)]), OrderedDict([('intento', 5), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.05)]), OrderedDict([('intento', 6), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.001)]), OrderedDict([('intento', 7), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 1.0)]), OrderedDict([('intento', 8), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.5)]), OrderedDict([('intento', 9), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.25)]), OrderedDict([('intento', 10), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.1)]), OrderedDict([('intento', 11), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.05)]), OrderedDict([('intento', 12), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.001)]), OrderedDict([('intento', 13), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.25)]), OrderedDict([('intento', 14), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.25)]), OrderedDict([('intento', 15), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('contraste', 0.25)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL3.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_3_CONTRAST"/>
    <LoopTerminator name="trials_bl_3"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 1), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 2), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 3), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 4), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 5), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 6), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 7), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 8), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 9), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 10), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 11), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 12), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 13), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 14), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)]), OrderedDict([('intento', 15), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('tamanyo', 0.25), ('FFT', 10)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL4.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_4_TEMPORAL_FREQ"/>
    <LoopTerminator name="trials_bl_4"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL5_1'), ('path', 'semantic_stims/bee.png'), ('posicion_angular', 0), ('tipo', 'animal'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_2'), ('path', 'semantic_stims/bear_2.png'), ('posicion_angular', 0), ('tipo', 'animal'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_3'), ('path', 'semantic_stims/bear.png'), ('posicion_angular', 0), ('tipo', 'animal'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_4'), ('path', 'semantic_stims/airplane.png'), ('posicion_angular', 0), ('tipo', 'inerte'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_5'), ('path', 'semantic_stims/helicopter.png'), ('posicion_angular', 0), ('tipo', 'inerte'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_6'), ('path', 'semantic_stims/duck.png'), ('posicion_angular', 0), ('tipo', 'animal'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_7'), ('path', 'semantic_stims/computer_mouse.png'), ('posicion_angular', 0), ('tipo', 'inerte'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_8'), ('path', 'semantic_stims/cat.png'), ('posicion_angular', 0), ('tipo', 'animal'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_9'), ('path', 'semantic_stims/camel.png'), ('posicion_angular', 0), ('tipo', 'animal'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_10'), ('path', 'semantic_stims/bulldozer_2.png'), ('posicion_angular', 0), ('tipo', 'inerte'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_11'), ('path', 'semantic_stims/bulldozer.png'), ('posicion_angular', 0), ('tipo', 'inerte'), ('excentricidad', 0), ('tamanyo', 0.25)]), OrderedDict([('intento', 'BL5_12'), ('path', 'semantic_stims/bottle_opener.png'), ('posicion_angular', 0), ('tipo', 'inerte'), ('excentricidad', 0), ('tamanyo', 0.25)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL5.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_5_SEMANTIC_STIM"/>
    <LoopTerminator name="trials"/>
    <Routine name="break_5s_"/>
  </Flow>
</PsychoPy2experiment>
